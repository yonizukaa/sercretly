{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { collection, doc, onSnapshot, query, QuerySnapshot, where } from \"@firebase/firestore\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport GlobalContext from \"../context/Context\";\nimport ContactsFloatingIcons from \"../components/ContactsFloatingIcons\";\nimport { rooms } from \"../context/\";\nimport ListItem from \"../components/ListItem\";\nexport default function Chats() {\n  var currentUser = auth.currentUser;\n\n  var _useContext = useContext(GlobalContext),\n      rooms = _useContext.rooms,\n      setRooms = _useContext.setRooms;\n\n  var chatsQuery = query(collection(db, \"rooms\"), where(\"participantsArray\", \"array-contains\", currentUser.email));\n  useEffect(function () {\n    var unsubscribe = onSnapshot(chatsQuery, function (QuerySnapshot) {\n      var parsedChats = QuerySnapshot.docs.filter(function (doc) {\n        return doc.data().lastMessage;\n      }).map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id,\n          userB: doc.data().participants.find(function (p) {\n            return p.email == !currentUser.email;\n          })\n        });\n      });\n      setRooms(parsedChats);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n\n  function getUserB(user, contacts) {\n    var userContact = contacts.find(function (c) {\n      return c.email === user.email;\n    });\n\n    if (userContact && userContact.contactName) {\n      return _objectSpread(_objectSpread({}, user), {}, {\n        contactName: userContact.contactName\n      });\n    }\n\n    return user;\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 5,\n      paddingRight: 10\n    }\n  }, rooms.map(function (room) {\n    return React.createElement(ListItem, {\n      type: \"chat\",\n      description: room.lastMessage.text,\n      key: room.id,\n      room: room,\n      time: room.lastMessage.createAt,\n      user: getUserB(chat.userB)\n    });\n  }), React.createElement(Text, null, \"Chats\"), React.createElement(ContactsFloatingIcons, null));\n}","map":{"version":3,"names":["collection","doc","onSnapshot","query","QuerySnapshot","where","React","useContext","useEffect","auth","db","GlobalContext","ContactsFloatingIcons","rooms","ListItem","Chats","currentUser","setRooms","chatsQuery","email","unsubscribe","parsedChats","docs","filter","data","lastMessage","map","id","userB","participants","find","p","getUserB","user","contacts","userContact","c","contactName","flex","padding","paddingRight","room","text","createAt","chat"],"sources":["C:/Users/johan/OneDrive/Bureau/Appmobile/Secretly/wp-clone-starter/screens/Chats.js"],"sourcesContent":["import {\r\n  collection,\r\n  doc,\r\n  onSnapshot,\r\n  query,\r\n  QuerySnapshot,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { View, Text } from \"react-native\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport GlobalContext from \"../context/Context\";\r\nimport ContactsFloatingIcons from \"../components/ContactsFloatingIcons\";\r\nimport { rooms } from \"../context/\";\r\nimport ListItem from \"../components/ListItem\";\r\n\r\nexport default function Chats() {\r\n  const { currentUser } = auth;\r\n  const { rooms, setRooms } = useContext(GlobalContext);\r\n  const chatsQuery = query(\r\n    collection(db, \"rooms\"),\r\n    where(\"participantsArray\", \"array-contains\", currentUser.email)\r\n  );\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(chatsQuery, (QuerySnapshot) => {\r\n      const parsedChats = QuerySnapshot.docs\r\n        .filter((doc) => doc.data().lastMessage)\r\n        .map((doc) => ({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n          userB: doc\r\n            .data()\r\n            .participants.find((p) => p.email == !currentUser.email),\r\n        }));\r\n      setRooms(parsedChats);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  function getUserB(user, contacts) {\r\n    const userContact = contacts.find((c) => c.email === user.email);\r\n    if (userContact && userContact.contactName) {\r\n      return { ...user, contactName: userContact.contactName };\r\n    }\r\n    return user;\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 5, paddingRight: 10 }}>\r\n      {rooms.map((room) => (\r\n        <ListItem\r\n          type=\"chat\"\r\n          description={room.lastMessage.text}\r\n          key={room.id}\r\n          room={room}\r\n          time={room.lastMessage.createAt}\r\n          user={getUserB(chat.userB)}\r\n        />\r\n      ))}\r\n      <Text>Chats</Text>\r\n      <ContactsFloatingIcons />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,GAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,KANF,QAOO,qBAPP;;;AASA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,OAAOC,aAAP;AACA,OAAOC,qBAAP;AACA,SAASC,KAAT;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;EAC9B,IAAQC,WAAR,GAAwBP,IAAxB,CAAQO,WAAR;;EACA,kBAA4BT,UAAU,CAACI,aAAD,CAAtC;EAAA,IAAQE,KAAR,eAAQA,KAAR;EAAA,IAAeI,QAAf,eAAeA,QAAf;;EACA,IAAMC,UAAU,GAAGf,KAAK,CACtBH,UAAU,CAACU,EAAD,EAAK,OAAL,CADY,EAEtBL,KAAK,CAAC,mBAAD,EAAsB,gBAAtB,EAAwCW,WAAW,CAACG,KAApD,CAFiB,CAAxB;EAIAX,SAAS,CAAC,YAAM;IACd,IAAMY,WAAW,GAAGlB,UAAU,CAACgB,UAAD,EAAa,UAACd,aAAD,EAAmB;MAC5D,IAAMiB,WAAW,GAAGjB,aAAa,CAACkB,IAAd,CACjBC,MADiB,CACV,UAACtB,GAAD;QAAA,OAASA,GAAG,CAACuB,IAAJ,GAAWC,WAApB;MAAA,CADU,EAEjBC,GAFiB,CAEb,UAACzB,GAAD;QAAA,uCACAA,GAAG,CAACuB,IAAJ,EADA;UAEHG,EAAE,EAAE1B,GAAG,CAAC0B,EAFL;UAGHC,KAAK,EAAE3B,GAAG,CACPuB,IADI,GAEJK,YAFI,CAESC,IAFT,CAEc,UAACC,CAAD;YAAA,OAAOA,CAAC,CAACZ,KAAF,IAAW,CAACH,WAAW,CAACG,KAA/B;UAAA,CAFd;QAHJ;MAAA,CAFa,CAApB;MASAF,QAAQ,CAACI,WAAD,CAAR;IACD,CAX6B,CAA9B;IAYA,OAAO;MAAA,OAAMD,WAAW,EAAjB;IAAA,CAAP;EACD,CAdQ,EAcN,EAdM,CAAT;;EAgBA,SAASY,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;IAChC,IAAMC,WAAW,GAAGD,QAAQ,CAACJ,IAAT,CAAc,UAACM,CAAD;MAAA,OAAOA,CAAC,CAACjB,KAAF,KAAYc,IAAI,CAACd,KAAxB;IAAA,CAAd,CAApB;;IACA,IAAIgB,WAAW,IAAIA,WAAW,CAACE,WAA/B,EAA4C;MAC1C,uCAAYJ,IAAZ;QAAkBI,WAAW,EAAEF,WAAW,CAACE;MAA3C;IACD;;IACD,OAAOJ,IAAP;EACD;;EAED,OACE,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAEK,IAAI,EAAE,CAAR;MAAWC,OAAO,EAAE,CAApB;MAAuBC,YAAY,EAAE;IAArC;EAAb,GACG3B,KAAK,CAACa,GAAN,CAAU,UAACe,IAAD;IAAA,OACT,oBAAC,QAAD;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAEA,IAAI,CAAChB,WAAL,CAAiBiB,IAFhC;MAGE,GAAG,EAAED,IAAI,CAACd,EAHZ;MAIE,IAAI,EAAEc,IAJR;MAKE,IAAI,EAAEA,IAAI,CAAChB,WAAL,CAAiBkB,QALzB;MAME,IAAI,EAAEX,QAAQ,CAACY,IAAI,CAAChB,KAAN;IANhB,EADS;EAAA,CAAV,CADH,EAWE,oBAAC,IAAD,gBAXF,EAYE,oBAAC,qBAAD,OAZF,CADF;AAgBD"},"metadata":{},"sourceType":"module"}