{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport computeProps from \"../Utils/computeProps\";\nimport Col from \"./Col\";\nimport Row from \"./Row\";\n\nvar GridNB = function (_Component) {\n  _inherits(GridNB, _Component);\n\n  var _super = _createSuper(GridNB);\n\n  function GridNB() {\n    _classCallCheck(this, GridNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flex: 1,\n        flexDirection: this.ifRow() ? 'column' : 'row'\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"ifRow\",\n    value: function ifRow() {\n      var row = false;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child && child.type == Row) row = true;\n      });\n      return row;\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onPress) {\n        return React.createElement(TouchableOpacity, {\n          onPress: this.props.onPress\n        }, React.createElement(View, _extends({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps()), this.props.children));\n      } else {\n        return React.createElement(View, _extends({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props, this.prepareRootProps()), this.props.children);\n      }\n    }\n  }]);\n\n  return GridNB;\n}(Component);\n\nexport { GridNB as default };","map":{"version":3,"names":["React","Component","computeProps","Col","Row","GridNB","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps"],"sources":["C:/Users/johan/OneDrive/Bureau/Appmobile/Secretly/secretly/node_modules/react-native-easy-grid/Components/Grid.js"],"sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child && child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAOC,YAAP;AACA,OAAOC,GAAP;AACA,OAAOC,GAAP;;IAGqBC,M;;;;;;;;;;;;;WACjB,4BAAmB;MAEf,IAAIC,IAAI,GAAG;QACPC,IAAI,EAAE,CADC;QAEPC,aAAa,EAAE,KAAKC,KAAL,KAAe,QAAf,GAA0B;MAFlC,CAAX;MAKA,IAAIC,YAAY,GAAG;QACfC,KAAK,EAAEL;MADQ,CAAnB;MAIA,OAAOJ,YAAY,CAAC,KAAKU,KAAN,EAAaF,YAAb,CAAnB;IAEH;;;WAED,iBAAQ;MACJ,IAAIG,GAAG,GAAG,KAAV;MACAb,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;QACzD,IAAGA,KAAK,IAAIA,KAAK,CAACX,IAAN,IAAcF,GAA1B,EACIS,GAAG,GAAG,IAAN;MACP,CAHD;MAIA,OAAOA,GAAP;IACH;;;WAED,wBAAeK,WAAf,EAA4B;MAC1B,KAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;IACD;;;WAEH,kBAAS;MAAA;;MACP,IAAG,KAAKN,KAAL,CAAWS,OAAd,EAAsB;QACpB,OACE,oBAAC,gBAAD;UAAkB,OAAO,EAAE,KAAKT,KAAL,CAAWS;QAAtC,GACJ,oBAAC,IAAD;UACE,GAAG,EAAE,aAAAC,SAAS;YAAA,OAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;UAAA;QADhB,GAEM,KAAKV,KAFX,EAGM,KAAKW,gBAAL,EAHN,GAIE,KAAKX,KAAL,CAAWI,QAJb,CADI,CADF;MASD,CAVD,MAWI;QACF,OACE,oBAAC,IAAD;UACF,GAAG,EAAE,aAAAM,SAAS;YAAA,OAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;UAAA;QADZ,GAEE,KAAKV,KAFP,EAGE,KAAKW,gBAAL,EAHF,GAIF,KAAKX,KAAL,CAAWI,QAJT,CADF;MAOD;IACF;;;;EAlDiCf,S;;SAAfI,M"},"metadata":{},"sourceType":"module"}