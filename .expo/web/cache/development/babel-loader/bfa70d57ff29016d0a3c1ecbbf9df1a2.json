{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport GlobalContext from \"../context/Context\";\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport Avatar from \"./Avatar\";\nexport default function ListItem(_ref) {\n  var type = _ref.type,\n      description = _ref.description,\n      user = _ref.user,\n      style = _ref.style,\n      time = _ref.time,\n      room = _ref.room,\n      image = _ref.image;\n  var navigation = useNavigation();\n\n  var _useContext = useContext(GlobalContext),\n      colors = _useContext.theme.colors;\n\n  return React.createElement(TouchableOpacity, {\n    style: _objectSpread({\n      height: 80\n    }, style),\n    onPress: function onPress() {\n      return navigation.navigate(\"chat\", {\n        user: user,\n        room: room,\n        image: image\n      });\n    }\n  }, React.createElement(Grid, {\n    style: {\n      maxHeight: 80\n    }\n  }, React.createElement(Col, {\n    style: {\n      width: 80,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(Avatar, {\n    user: user,\n    size: type === \"contacts\" ? 40 : 65\n  })), React.createElement(Col, {\n    style: {\n      marginLeft: 10\n    }\n  }, React.createElement(Row, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Col, null, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 16,\n      color: colors.text\n    }\n  }, user.contactName || user.displayName)), time && React.createElement(Col, {\n    style: {\n      alignItems: \"flex-end\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.secondaryText,\n      fontSize: 11\n    }\n  }, new Date(time.seconds * 1000).toLocaleDateString()))), description && React.createElement(Row, {\n    style: {\n      marginTop: -5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: colors.secondaryText,\n      fontSize: 13\n    }\n  }, description)))));\n}","map":{"version":3,"names":["useNavigation","React","useContext","GlobalContext","Grid","Row","Col","Avatar","ListItem","type","description","user","style","time","room","image","navigation","colors","theme","height","navigate","maxHeight","width","alignItems","justifyContent","marginLeft","fontWeight","fontSize","color","text","contactName","displayName","secondaryText","Date","seconds","toLocaleDateString","marginTop"],"sources":["C:/Users/johan/OneDrive/Bureau/Appmobile/Secretly/secretly/components/ListItem.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useContext } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport GlobalContext from \"../context/Context\";\r\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\r\nimport Avatar from \"./Avatar\";\r\nexport default function ListItem({\r\n  type,\r\n  description,\r\n  user,\r\n  style,\r\n  time,\r\n  room,\r\n  image,\r\n}) {\r\n  const navigation = useNavigation();\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(GlobalContext);\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ height: 80, ...style }}\r\n      onPress={() => navigation.navigate(\"chat\", { user, room, image })}\r\n    >\r\n      <Grid style={{ maxHeight: 80 }}>\r\n        <Col\r\n          style={{ width: 80, alignItems: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <Avatar user={user} size={type === \"contacts\" ? 40 : 65} />\r\n        </Col>\r\n        <Col style={{ marginLeft: 10 }}>\r\n          <Row style={{ alignItems: \"center\" }}>\r\n            <Col>\r\n              <Text\r\n                style={{ fontWeight: \"bold\", fontSize: 16, color: colors.text }}\r\n              >\r\n                {user.contactName || user.displayName}\r\n              </Text>\r\n            </Col>\r\n            {time && (\r\n              <Col style={{ alignItems: \"flex-end\" }}>\r\n                <Text style={{ color: colors.secondaryText, fontSize: 11 }}>\r\n                  {new Date(time.seconds * 1000).toLocaleDateString()}\r\n                </Text>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n          {description && (\r\n            <Row style={{ marginTop: -5 }}>\r\n              <Text style={{ color: colors.secondaryText, fontSize: 13 }}>\r\n                {description}\r\n              </Text>\r\n            </Row>\r\n          )}\r\n        </Col>\r\n      </Grid>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAEA,OAAOC,aAAP;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,wBAA/B;AACA,OAAOC,MAAP;AACA,eAAe,SAASC,QAAT,OAQZ;EAAA,IAPDC,IAOC,QAPDA,IAOC;EAAA,IANDC,WAMC,QANDA,WAMC;EAAA,IALDC,IAKC,QALDA,IAKC;EAAA,IAJDC,KAIC,QAJDA,KAIC;EAAA,IAHDC,IAGC,QAHDA,IAGC;EAAA,IAFDC,IAEC,QAFDA,IAEC;EAAA,IADDC,KACC,QADDA,KACC;EACD,IAAMC,UAAU,GAAGhB,aAAa,EAAhC;;EACA,kBAEIE,UAAU,CAACC,aAAD,CAFd;EAAA,IACWc,MADX,eACEC,KADF,CACWD,MADX;;EAGA,OACE,oBAAC,gBAAD;IACE,KAAK;MAAIE,MAAM,EAAE;IAAZ,GAAmBP,KAAnB,CADP;IAEE,OAAO,EAAE;MAAA,OAAMI,UAAU,CAACI,QAAX,CAAoB,MAApB,EAA4B;QAAET,IAAI,EAAJA,IAAF;QAAQG,IAAI,EAAJA,IAAR;QAAcC,KAAK,EAALA;MAAd,CAA5B,CAAN;IAAA;EAFX,GAIE,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAEM,SAAS,EAAE;IAAb;EAAb,GACE,oBAAC,GAAD;IACE,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAT;MAAaC,UAAU,EAAE,QAAzB;MAAmCC,cAAc,EAAE;IAAnD;EADT,GAGE,oBAAC,MAAD;IAAQ,IAAI,EAAEb,IAAd;IAAoB,IAAI,EAAEF,IAAI,KAAK,UAAT,GAAsB,EAAtB,GAA2B;EAArD,EAHF,CADF,EAME,oBAAC,GAAD;IAAK,KAAK,EAAE;MAAEgB,UAAU,EAAE;IAAd;EAAZ,GACE,oBAAC,GAAD;IAAK,KAAK,EAAE;MAAEF,UAAU,EAAE;IAAd;EAAZ,GACE,oBAAC,GAAD,QACE,oBAAC,IAAD;IACE,KAAK,EAAE;MAAEG,UAAU,EAAE,MAAd;MAAsBC,QAAQ,EAAE,EAAhC;MAAoCC,KAAK,EAAEX,MAAM,CAACY;IAAlD;EADT,GAGGlB,IAAI,CAACmB,WAAL,IAAoBnB,IAAI,CAACoB,WAH5B,CADF,CADF,EAQGlB,IAAI,IACH,oBAAC,GAAD;IAAK,KAAK,EAAE;MAAEU,UAAU,EAAE;IAAd;EAAZ,GACE,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAEK,KAAK,EAAEX,MAAM,CAACe,aAAhB;MAA+BL,QAAQ,EAAE;IAAzC;EAAb,GACG,IAAIM,IAAJ,CAASpB,IAAI,CAACqB,OAAL,GAAe,IAAxB,EAA8BC,kBAA9B,EADH,CADF,CATJ,CADF,EAiBGzB,WAAW,IACV,oBAAC,GAAD;IAAK,KAAK,EAAE;MAAE0B,SAAS,EAAE,CAAC;IAAd;EAAZ,GACE,oBAAC,IAAD;IAAM,KAAK,EAAE;MAAER,KAAK,EAAEX,MAAM,CAACe,aAAhB;MAA+BL,QAAQ,EAAE;IAAzC;EAAb,GACGjB,WADH,CADF,CAlBJ,CANF,CAJF,CADF;AAuCD"},"metadata":{},"sourceType":"module"}