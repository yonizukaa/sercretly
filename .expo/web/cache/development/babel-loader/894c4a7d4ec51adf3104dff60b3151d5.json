{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from \"expo-constants\";\nimport GlobalContext from \"../context/Context\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { pickImage, askForPermission, uploadImage } from \"../utils\";\nimport { auth, db } from \"../firebase\";\nimport { updateProfile } from \"@firebase/auth\";\nimport { doc, setDoc } from \"@firebase/firestore\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Profile() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayName = _useState2[0],\n      setDisplayName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedImage = _useState4[0],\n      setSelectedImage = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      permissionStatus = _useState6[0],\n      setPermissionStatus = _useState6[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    (function _callee() {\n      var status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(askForPermission());\n\n            case 2:\n              status = _context.sent;\n              setPermissionStatus(status);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var _useContext = useContext(GlobalContext),\n      colors = _useContext.theme.colors;\n\n  function handlePress() {\n    var user, photoURL, _await$uploadImage, url, userData;\n\n    return _regeneratorRuntime.async(function handlePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = auth.currentUser;\n\n            if (!selectedImage) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(uploadImage(selectedImage, \"images/\" + user.uid, \"profilePicture\"));\n\n          case 4:\n            _await$uploadImage = _context2.sent;\n            url = _await$uploadImage.url;\n            photoURL = url;\n\n          case 7:\n            userData = {\n              displayName: displayName,\n              email: user.email\n            };\n\n            if (photoURL) {\n              userData.photoURL = photoURL;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(Promise.all([updateProfile(user, userData), setDoc(doc(db, \"users\", user.uid), _objectSpread(_objectSpread({}, userData), {}, {\n              uid: user.uid\n            }))]));\n\n          case 11:\n            navigation.navigate(\"home\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleProfilePicture() {\n    var result;\n    return _regeneratorRuntime.async(function handleProfilePicture$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(pickImage());\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setSelectedImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (!permissionStatus) {\n    return _jsx(Text, {\n      children: \"Loading\"\n    });\n  }\n\n  if (permissionStatus !== \"granted\") {\n    return _jsx(Text, {\n      children: \"You need to allow this permission\"\n    });\n  }\n\n  return _jsxs(React.Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(View, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flex: 1,\n        paddingTop: Constants.statusBarHeight + 20,\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 22,\n          color: colors.foreground\n        },\n        children: \"Profile Info\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 14,\n          color: colors.text,\n          marginTop: 20\n        },\n        children: \"Please provide your name and an optional profile photo\"\n      }), _jsx(TouchableOpacity, {\n        onPress: handleProfilePicture,\n        style: {\n          marginTop: 30,\n          borderRadius: 120,\n          width: 120,\n          height: 120,\n          backgroundColor: colors.background,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: !selectedImage ? _jsx(MaterialCommunityIcons, {\n          name: \"camera-plus\",\n          color: colors.iconGray,\n          size: 45\n        }) : _jsx(Image, {\n          source: {\n            uri: selectedImage\n          },\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: 120\n          }\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Type your name\",\n        value: displayName,\n        onChangeText: setDisplayName,\n        style: {\n          borderBottomColor: colors.primary,\n          marginTop: 40,\n          borderBottomWidth: 2,\n          width: \"100%\"\n        }\n      }), _jsx(View, {\n        style: {\n          marginTop: \"auto\",\n          width: 80\n        },\n        children: _jsx(Button, {\n          title: \"Next\",\n          color: colors.secondary,\n          onPress: handlePress,\n          disabled: !displayName\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","useContext","useEffect","useState","Constants","GlobalContext","MaterialCommunityIcons","pickImage","askForPermission","uploadImage","auth","db","updateProfile","doc","setDoc","useNavigation","Profile","displayName","setDisplayName","selectedImage","setSelectedImage","permissionStatus","setPermissionStatus","navigation","status","colors","theme","handlePress","user","currentUser","uid","url","photoURL","userData","email","Promise","all","navigate","handleProfilePicture","result","cancelled","uri","alignItems","justifyContent","flex","paddingTop","statusBarHeight","padding","fontSize","color","foreground","text","marginTop","borderRadius","width","height","backgroundColor","background","iconGray","borderBottomColor","primary","borderBottomWidth","secondary"],"sources":["C:/Users/johan/OneDrive/Bureau/Appmobile/Secretly/secretly/screens/Profile.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n} from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport GlobalContext from \"../context/Context\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { pickImage, askForPermission, uploadImage } from \"../utils\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { doc, setDoc } from \"@firebase/firestore\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport default function Profile() {\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [permissionStatus, setPermissionStatus] = useState(null);\r\n  const navigation = useNavigation();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const status = await askForPermission();\r\n      setPermissionStatus(status);\r\n    })();\r\n  }, []);\r\n\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(GlobalContext);\r\n\r\n  async function handlePress() {\r\n    const user = auth.currentUser;\r\n    let photoURL;\r\n    if (selectedImage) {\r\n      const { url } = await uploadImage(\r\n        selectedImage,\r\n        `images/${user.uid}`,\r\n        \"profilePicture\"\r\n      );\r\n      photoURL = url;\r\n    }\r\n    const userData = {\r\n      displayName,\r\n      email: user.email,\r\n    };\r\n    if (photoURL) {\r\n      userData.photoURL = photoURL;\r\n    }\r\n\r\n    await Promise.all([\r\n      updateProfile(user, userData),\r\n      setDoc(doc(db, \"users\", user.uid), { ...userData, uid: user.uid }),\r\n    ]);\r\n    navigation.navigate(\"home\");\r\n  }\r\n\r\n  async function handleProfilePicture() {\r\n    const result = await pickImage();\r\n    if (!result.cancelled) {\r\n      setSelectedImage(result.uri);\r\n    }\r\n  }\r\n\r\n  if (!permissionStatus) {\r\n    return <Text>Loading</Text>;\r\n  }\r\n  if (permissionStatus !== \"granted\") {\r\n    return <Text>You need to allow this permission</Text>;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <StatusBar style=\"auto\" />\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flex: 1,\r\n          paddingTop: Constants.statusBarHeight + 20,\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 22, color: colors.foreground }}>\r\n          Profile Info\r\n        </Text>\r\n        <Text style={{ fontSize: 14, color: colors.text, marginTop: 20 }}>\r\n          Please provide your name and an optional profile photo\r\n        </Text>\r\n        <TouchableOpacity\r\n          onPress={handleProfilePicture}\r\n          style={{\r\n            marginTop: 30,\r\n            borderRadius: 120,\r\n            width: 120,\r\n            height: 120,\r\n            backgroundColor: colors.background,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {!selectedImage ? (\r\n            <MaterialCommunityIcons\r\n              name=\"camera-plus\"\r\n              color={colors.iconGray}\r\n              size={45}\r\n            />\r\n          ) : (\r\n            <Image\r\n              source={{ uri: selectedImage }}\r\n              style={{ width: \"100%\", height: \"100%\", borderRadius: 120 }}\r\n            />\r\n          )}\r\n        </TouchableOpacity>\r\n        <TextInput\r\n          placeholder=\"Type your name\"\r\n          value={displayName}\r\n          onChangeText={setDisplayName}\r\n          style={{\r\n            borderBottomColor: colors.primary,\r\n            marginTop: 40,\r\n            borderBottomWidth: 2,\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n        <View style={{ marginTop: \"auto\", width: 80 }}>\r\n          <Button\r\n            title=\"Next\"\r\n            color={colors.secondary}\r\n            onPress={handlePress}\r\n            disabled={!displayName}\r\n          />\r\n        </View>\r\n      </View>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}