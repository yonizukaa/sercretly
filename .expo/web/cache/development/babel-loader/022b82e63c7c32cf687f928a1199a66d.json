{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport \"react-native-get-random-values\";\nimport { nanoid } from \"nanoid\";\nimport React, { useContext, useEffect, useState, useCallback } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { useRoute } from \"@react-navigation/native\";\nimport GlobalContext from \"../context/Context\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport { collection, doc, onSnapshot, QuerySnapshot, setDoc } from \"firebase/firestore\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nvar randomId = nanoid();\nexport default function Chat() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomHash = _useState2[0],\n      setRoomHash = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useContext = useContext(GlobalContext),\n      colors = _useContext.theme.colors;\n\n  var currentUser = auth.currentUser;\n  var route = useRoute();\n  var room = route.params.room;\n  var selectedImage = route.params.selectedImage;\n  var userB = route.params.user;\n  var senderUser = currentUser.photoURL ? {\n    name: currentUser.displayName,\n    _id: currentUser.uid,\n    avatar: currentUser.photoURL\n  } : {\n    name: currentUser.displayName,\n    _id: currentUser.uid\n  };\n  var roomId = room ? room.id : randomId;\n  var roomRef = doc(db, \"rooms\", roomId);\n  var roomMessagesref = collection(db, \"rooms\", roomId, \"messages\");\n  useEffect(function () {\n    (function _callee() {\n      var currUserData, userBData, roomData, emailHash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (room) {\n                _context.next = 14;\n                break;\n              }\n\n              currUserData = {\n                displayName: currentUser.displayName,\n                email: currentUser.email\n              };\n\n              if (currentUser.photoURL) {\n                currUserData.photoURL = currentUser.photoURL;\n              }\n\n              userBData = {\n                displayName: userB.contactName || userB.displayName || \"\",\n                email: userB.email\n              };\n\n              if (userB.photoURL) {\n                userBData.photoURL = userB.photoURL;\n              }\n\n              roomData = {\n                participants: [currUserData, userBData],\n                participantsArray: [currentUser.email, userB.email]\n              };\n              _context.prev = 6;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(setDoc(roomRef, roomData));\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(_context.t0);\n\n            case 14:\n              emailHash = currentUser.email + \":\" + userB.email + \"  \";\n              setRoomHash(emailHash);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[6, 11]], Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    var unsubscribe = onSnapshot(roomMessagesref, function (QuerySnapshot) {\n      var messagesFirestore = QuerySnapshot.docChanges().filter(function (_ref) {\n        var type = _ref.type;\n        return type === \"added\";\n      }).map(function (_ref2) {\n        var doc = _ref2.doc;\n        var message = doc.data();\n        return _objectSpread(_objectSpread({}, message), {}, {\n          createdAt: message.createdAt.toDate()\n        });\n      });\n      appendedMessages(messages);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  });\n  var appendedMessages = useCallback(function (messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, [messages]);\n  return React.createElement(ImageBackground, {\n    resizeMode: \"cover\",\n    source: require(\"../assets/chatbg.png\"),\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Text, null, \"Chat\"));\n}","map":{"version":3,"names":["nanoid","React","useContext","useEffect","useState","useCallback","auth","db","useRoute","GlobalContext","GiftedChat","collection","doc","onSnapshot","QuerySnapshot","setDoc","randomId","Chat","roomHash","setRoomHash","messages","setMessages","colors","theme","currentUser","route","room","params","selectedImage","userB","user","senderUser","photoURL","name","displayName","_id","uid","avatar","roomId","id","roomRef","roomMessagesref","currUserData","email","userBData","contactName","roomData","participants","participantsArray","console","log","emailHash","unsubscribe","messagesFirestore","docChanges","filter","type","map","message","data","createdAt","toDate","appendedMessages","previousMessages","append","require","flex"],"sources":["C:/Users/johan/OneDrive/Bureau/Appmobile/Secretly/wp-clone-starter/screens/Chat.js"],"sourcesContent":["//@refresh reset\r\n\r\nimport { View, Text } from \"react-native\";\r\nimport \"react-native-get-random-values\";\r\nimport { nanoid } from \"nanoid\";\r\nimport React, { useContext, useEffect, useState, useCallback } from \"react\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport GlobalContext from \"../context/Context\";\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  onSnapshot,\r\n  QuerySnapshot,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport { ImageBackground } from \"react-native-web\";\r\n\r\nconst randomId = nanoid();\r\nexport default function Chat() {\r\n  const [roomHash, setRoomHash] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const {\r\n    theme: { colors },\r\n  } = useContext(GlobalContext);\r\n  const { currentUser } = auth;\r\n  const route = useRoute();\r\n  const room = route.params.room;\r\n  const selectedImage = route.params.selectedImage;\r\n  const userB = route.params.user;\r\n\r\n  const senderUser = currentUser.photoURL\r\n    ? {\r\n        name: currentUser.displayName,\r\n        _id: currentUser.uid,\r\n        avatar: currentUser.photoURL,\r\n      }\r\n    : { name: currentUser.displayName, _id: currentUser.uid };\r\n\r\n  const roomId = room ? room.id : randomId;\r\n\r\n  const roomRef = doc(db, \"rooms\", roomId);\r\n  const roomMessagesref = collection(db, \"rooms\", roomId, \"messages\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!room) {\r\n        const currUserData = {\r\n          displayName: currentUser.displayName,\r\n          email: currentUser.email,\r\n        };\r\n        if (currentUser.photoURL) {\r\n          currUserData.photoURL = currentUser.photoURL;\r\n        }\r\n        const userBData = {\r\n          displayName: userB.contactName || userB.displayName || \"\",\r\n          email: userB.email,\r\n        };\r\n        if (userB.photoURL) {\r\n          userBData.photoURL = userB.photoURL;\r\n        }\r\n        const roomData = {\r\n          participants: [currUserData, userBData],\r\n          participantsArray: [currentUser.email, userB.email],\r\n        };\r\n        try {\r\n          await setDoc(roomRef, roomData);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n      const emailHash = `${currentUser.email}:${userB.email}  `;\r\n      setRoomHash(emailHash);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(roomMessagesref, (QuerySnapshot) => {\r\n      const messagesFirestore = QuerySnapshot.docChanges()\r\n        .filter(({ type }) => type === \"added\")\r\n        .map(({ doc }) => {\r\n          const message = doc.data();\r\n          return { ...message, createdAt: message.createdAt.toDate() };\r\n        });\r\n      appendedMessages(messages);\r\n    });\r\n    return () => unsubscribe();\r\n  });\r\n\r\n  const appendedMessages = useCallback(\r\n    (messages) => {\r\n      setMessages((previousMessages) =>\r\n        GiftedChat.append(previousMessages, messages)\r\n      );\r\n    },\r\n    [messages]\r\n  );\r\n  return (\r\n    <ImageBackground\r\n      resizeMode=\"cover\"\r\n      source={require(\"../assets/chatbg.png\")}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Text>Chat</Text>\r\n    </ImageBackground>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}