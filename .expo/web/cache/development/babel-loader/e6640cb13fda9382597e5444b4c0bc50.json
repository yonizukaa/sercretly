{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"containerStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Composer from \"./Composer\";\nimport Send from \"./Send\";\nimport Actions from \"./Actions\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: Color.defaultColor,\n    backgroundColor: Color.white,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  primary: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  accessory: {\n    height: 44\n  }\n});\n\nvar InputToolbar = function (_React$Component) {\n  _inherits(InputToolbar, _React$Component);\n\n  var _super = _createSuper(InputToolbar);\n\n  function InputToolbar() {\n    var _this;\n\n    _classCallCheck(this, InputToolbar);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      position: 'absolute'\n    };\n    _this.keyboardWillShowListener = undefined;\n    _this.keyboardWillHideListener = undefined;\n\n    _this.keyboardWillShow = function () {\n      if (_this.state.position !== 'relative') {\n        _this.setState({\n          position: 'relative'\n        });\n      }\n    };\n\n    _this.keyboardWillHide = function () {\n      if (_this.state.position !== 'absolute') {\n        _this.setState({\n          position: 'absolute'\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputToolbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardWillShowListener = Keyboard.addListener('keyboardWillShow', this.keyboardWillShow);\n      this.keyboardWillHideListener = Keyboard.addListener('keyboardWillHide', this.keyboardWillHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.keyboardWillShowListener) {\n        this.keyboardWillShowListener.remove();\n      }\n\n      if (this.keyboardWillHideListener) {\n        this.keyboardWillHideListener.remove();\n      }\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      if (this.props.renderActions) {\n        return this.props.renderActions(props);\n      } else if (this.props.onPressActionButton) {\n        return _jsx(Actions, _objectSpread({}, props));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderSend\",\n    value: function renderSend() {\n      if (this.props.renderSend) {\n        return this.props.renderSend(this.props);\n      }\n\n      return _jsx(Send, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderComposer\",\n    value: function renderComposer() {\n      if (this.props.renderComposer) {\n        return this.props.renderComposer(this.props);\n      }\n\n      return _jsx(Composer, _objectSpread({}, this.props));\n    }\n  }, {\n    key: \"renderAccessory\",\n    value: function renderAccessory() {\n      if (this.props.renderAccessory) {\n        return _jsx(View, {\n          style: [styles.accessory, this.props.accessoryStyle],\n          children: this.props.renderAccessory(this.props)\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: [styles.container, {\n          position: this.state.position\n        }, this.props.containerStyle],\n        children: [_jsxs(View, {\n          style: [styles.primary, this.props.primaryStyle],\n          children: [this.renderActions(), this.renderComposer(), this.renderSend()]\n        }), this.renderAccessory()]\n      });\n    }\n  }]);\n\n  return InputToolbar;\n}(React.Component);\n\nexport { InputToolbar as default };\nInputToolbar.defaultProps = {\n  renderAccessory: null,\n  renderActions: null,\n  renderSend: null,\n  renderComposer: null,\n  containerStyle: {},\n  primaryStyle: {},\n  accessoryStyle: {},\n  onPressActionButton: function onPressActionButton() {}\n};\nInputToolbar.propTypes = {\n  renderAccessory: PropTypes.func,\n  renderActions: PropTypes.func,\n  renderSend: PropTypes.func,\n  renderComposer: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  containerStyle: StylePropType,\n  primaryStyle: StylePropType,\n  accessoryStyle: StylePropType\n};","map":{"version":3,"mappings":"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","names":["PropTypes","React","Composer","Send","Actions","Color","StylePropType","styles","StyleSheet","create","container","borderTopWidth","hairlineWidth","borderTopColor","defaultColor","backgroundColor","white","bottom","left","right","primary","flexDirection","alignItems","accessory","height","InputToolbar","position","undefined","state","setState","keyboardWillShowListener","Keyboard","addListener","keyboardWillShow","keyboardWillHideListener","keyboardWillHide","remove","props","containerStyle","renderActions","onPressActionButton","renderSend","renderComposer","renderAccessory","accessoryStyle","primaryStyle","Component","func"],"sourceRoot":"","sources":["../src/InputToolbar.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}